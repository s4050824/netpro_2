/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hw;
import java.awt.*;

import java.awt.event.*;

import java.util.*;
import java.net.*;
import java.io.*;
import javax.swing.*;
import javax.swing.event.*;

 

/**
 *
 * @author AnswerP13
 */
public class HW {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception{
        // TODO code application logic here
JFrame frame = new EditorPaneFrame();
		frame.show();
	}
}
class EditorPaneFrame extends JFrame
{
 
	private JTextField urlInput_a;
        private JTextField urlInput_b;
        private JTextArea textAreal = new JTextArea(30,30);
	private JButton loadButton;
	private JButton backButton_a;
        private JButton backButton_b;
	private JEditorPane editorPane_a;
        private JEditorPane editorPane_b;
	private Stack urlStack_a = new Stack();
        private Stack urlStack_b = new Stack();
 
 
	public EditorPaneFrame()
	{
		setTitle("Jatupome Chittiruengkiat s4050824@kmitl.ac.th - Java Web Browser (Network Programming Class Assignment)");
		setSize(1200,720);
		addWindowListener(new WindowAdapter()
		{
			public void windowClosing(WindowEvent e)
			{
				System.exit(0);
			}
		} );
 
		// set up text field and load button for typing in URL
 
		            urlInput_a = new JTextField(40);
                urlInput_b = new JTextField(40);
 
                final ThreadSubclass Thread_a = new ThreadSubclass();
                final ThreadSubclass Thread_b = new ThreadSubclass();
		loadButton = new JButton("Load");
		loadButton.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent event) 
			{
				try
				{
					// remember URL for back button
					urlStack_a.push(urlInput_a.getText());
                                        urlStack_b.push(urlInput_b.getText());
                                        
					editorPane_a.setPage(urlInput_a.getText());
                                        editorPane_b.setPage(urlInput_b.getText());
                                        
                                        String text = "Thread a: Start get url page :"+urlInput_a.getText()+"\n";
                                        textAreal.append(text);
                                        text = "Thread b: Start get url page :"+urlInput_b.getText()+"\n";
                                        textAreal.append(text);
                                        URL obj_a = new URL(urlInput_a.getText());
                                        URLConnection conn_a = obj_a.openConnection();
                                        java.util.Map<String, java.util.List<String>> map_a = conn_a.getHeaderFields();
                                        

                                        for (java.util.Map.Entry<String, java.util.List<String>> entry : map_a.entrySet()) {
                                                textAreal.append("Thread a : " + entry.getKey() 
                                                           + " ,Value : " + entry.getValue()+"\n");
                                        }
                                        
                                        URL obj = new URL(urlInput_b.getText());
                                        URLConnection conn = obj.openConnection();
                                        java.util.Map<String, java.util.List<String>> map = conn.getHeaderFields();
                                        

                                        for (java.util.Map.Entry<String, java.util.List<String>> entry : map.entrySet()) {
                                                textAreal.append("Thread b : " + entry.getKey() 
                                                           + " ,Value : " + entry.getValue()+"\n");
                                        }
                                        
                                        
 
                                        
                                        Thread_a.start();
                                        text = "Thread a: Running process"+"\n";
                                        textAreal.append(text);
                                        Thread_b.start();
                                        text = "Thread b: Running process"+"\n";
                                        textAreal.append(text);
				}
				catch(Exception e)
				{
					editorPane_a.setText("Error: " +e);
                                        editorPane_b.setText("Error: " +e);
				}
			}
		});
		// set up back button and button action
                //////// Back Button Thread A
		backButton_a = new JButton("Back");
		backButton_a.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent event)
			{
				if(urlStack_a.size()<=1) return;
				try
				{
					urlStack_a.pop();
					String urlString = (String)urlStack_a.peek();
					urlInput_a.setText(urlString);
					editorPane_a.setPage(urlString);
				}
				catch(IOException e)
				{
					editorPane_a.setText("Error : " +e);
				}
			}
		});
                
                /////// editorPane Thread A
		editorPane_a = new JEditorPane();
		editorPane_a.setEditable(false);
		editorPane_a.addHyperlinkListener(new HyperlinkListener()
		{
			public void hyperlinkUpdate(HyperlinkEvent event)
			{
				if(event.getEventType() == HyperlinkEvent.EventType.ACTIVATED)
				{
					try
					{
						urlStack_a.push(event.getURL().toString());
						urlInput_a.setText(event.getURL().toString());
 
						editorPane_a.setPage(event.getURL());
					}
					catch(IOException e)
					{
						editorPane_a.setText("Error: " + e);
					}
				}
			}
		});
                
                //////// Back Button Thread B
		backButton_b = new JButton("Back");
		backButton_b.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent event)
			{
				if(urlStack_b.size()<=1) return;
				try
				{
					urlStack_b.pop();
					String urlString = (String)urlStack_b.peek();
					urlInput_b.setText(urlString);
					editorPane_b.setPage(urlString);
				}
				catch(IOException e)
				{
					editorPane_b.setText("Error : " +e);
				}
			}
		});
                
                /////// editorPane Thread b
		editorPane_b = new JEditorPane();
		editorPane_b.setEditable(false);
		editorPane_b.addHyperlinkListener(new HyperlinkListener()
		{
			public void hyperlinkUpdate(HyperlinkEvent event)
			{
				if(event.getEventType() == HyperlinkEvent.EventType.ACTIVATED)
				{
					try
					{
						urlStack_b.push(event.getURL().toString());
						urlInput_b.setText(event.getURL().toString());
 
						editorPane_b.setPage(event.getURL());
					}
					catch(IOException e)
					{
						editorPane_b.setText("Error: " + e);
					}
				}
			}
		});
 
		Container contentPane = getContentPane();
                editorPane_a.setSize(400,300);
		contentPane.add(new JScrollPane(editorPane_a),"West");
                editorPane_b.setSize(400,300);
		contentPane.add(new JScrollPane(editorPane_b),"East");
                textAreal.setForeground(Color.red);
		contentPane.add(new JScrollPane(textAreal),"Center");
                
 
		JPanel panel = new JPanel();
		panel.add(new JLabel("URL"));
		panel.add(urlInput_a);
                panel.add(backButton_a);
                panel.add(loadButton);
                panel.add(new JLabel("URL"));
		panel.add(urlInput_b);
                panel.add(backButton_b);
		
 
		contentPane.add(panel,"North");
	}
 
}
